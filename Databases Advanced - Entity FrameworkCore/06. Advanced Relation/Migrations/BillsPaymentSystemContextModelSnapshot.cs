// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_BillsPaymentSystem.Data;

namespace BillsPaymentSystem.Migrations
{
    [DbContext(typeof(BillsPaymentSystemContext))]
    partial class BillsPaymentSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P01_BillsPaymentSystem.Data.Models.BankAccount", b =>
                {
                    b.Property<int>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("BankAccountId");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new { BankAccountId = 1, Balance = 2455m, BankName = "SG Expresbank", SwiftCode = "TGBHJKL" },
                        new { BankAccountId = 2, Balance = 12000m, BankName = "Investbank", SwiftCode = "TBGINKFL" },
                        new { BankAccountId = 3, Balance = 14000m, BankName = "DSK", SwiftCode = "TBGDSK" },
                        new { BankAccountId = 4, Balance = 8500m, BankName = "Raiffensen bank", SwiftCode = "TBGFRF" }
                    );
                });

            modelBuilder.Entity("P01_BillsPaymentSystem.Data.Models.CreditCard", b =>
                {
                    b.Property<int>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<decimal>("Limit");

                    b.Property<decimal>("MoneyOwed");

                    b.HasKey("CreditCardId");

                    b.ToTable("CreditCards");

                    b.HasData(
                        new { CreditCardId = 1, ExpirationDate = new DateTime(2017, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Limit = 15000.00m, MoneyOwed = 1500.00m },
                        new { CreditCardId = 2, ExpirationDate = new DateTime(2018, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), Limit = 20000m, MoneyOwed = 1800m },
                        new { CreditCardId = 3, ExpirationDate = new DateTime(2016, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), Limit = 15000m, MoneyOwed = 14000m },
                        new { CreditCardId = 4, ExpirationDate = new DateTime(2011, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), Limit = 16000m, MoneyOwed = 4500m }
                    );
                });

            modelBuilder.Entity("P01_BillsPaymentSystem.Data.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankAccountId");

                    b.Property<int?>("CreditCardId");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId")
                        .IsUnique()
                        .HasFilter("[BankAccountId] IS NOT NULL");

                    b.HasIndex("CreditCardId")
                        .IsUnique()
                        .HasFilter("[CreditCardId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.HasIndex("BankAccountId", "CreditCardId")
                        .IsUnique()
                        .HasFilter("[BankAccountId] IS NOT NULL AND [CreditCardId] IS NOT NULL");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new { Id = 1, BankAccountId = 1, Type = "BankAccount", UserId = 1 },
                        new { Id = 2, BankAccountId = 2, Type = "BankAccount", UserId = 1 },
                        new { Id = 3, CreditCardId = 1, Type = "CreditCard", UserId = 1 },
                        new { Id = 4, CreditCardId = 2, Type = "CreditCard", UserId = 2 },
                        new { Id = 5, BankAccountId = 3, Type = "BankAccount", UserId = 3 },
                        new { Id = 6, CreditCardId = 3, Type = "CreditCard", UserId = 3 },
                        new { Id = 7, CreditCardId = 4, Type = "CreditCard", UserId = 3 },
                        new { Id = 8, BankAccountId = 4, Type = "BankAccount", UserId = 4 }
                    );
                });

            modelBuilder.Entity("P01_BillsPaymentSystem.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new { UserId = 1, Email = "pinko@abv.bg", FirstName = "Pinko", LastName = "Ivanov", Password = "123" },
                        new { UserId = 2, Email = "Sedefcho@gmail.com", FirstName = "Sedefcho", LastName = "Petrov", Password = "234" },
                        new { UserId = 3, Email = "Trendafil@yahoo.com", FirstName = "Trendafil", LastName = "Todorov", Password = "345" },
                        new { UserId = 4, Email = "dragana@bnr.bg", FirstName = "Dragana", LastName = "Borisova", Password = "456" }
                    );
                });

            modelBuilder.Entity("P01_BillsPaymentSystem.Data.Models.PaymentMethod", b =>
                {
                    b.HasOne("P01_BillsPaymentSystem.Data.Models.BankAccount", "BankAccount")
                        .WithOne("PaymentMethod")
                        .HasForeignKey("P01_BillsPaymentSystem.Data.Models.PaymentMethod", "BankAccountId");

                    b.HasOne("P01_BillsPaymentSystem.Data.Models.CreditCard", "CreditCard")
                        .WithOne("PaymentMethod")
                        .HasForeignKey("P01_BillsPaymentSystem.Data.Models.PaymentMethod", "CreditCardId");

                    b.HasOne("P01_BillsPaymentSystem.Data.Models.User", "User")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
